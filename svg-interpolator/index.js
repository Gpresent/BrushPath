import { SaxEventType, SAXParser } from './sax-wasm/lib/module/index.js';
import { SVGPathInterpolator } from './SVGPathInterpolator.js';
async function getParser(saxWasmPath) {
    const wasmResponse = await fetch(saxWasmPath);
    if (!wasmResponse.ok) {
        throw new Error(`Cannot load the parser at ${saxWasmPath}`);
    }
    const parser = new SAXParser(SaxEventType.OpenTag | SaxEventType.CloseTag, { highWaterMark: 64 * 1024 });
    // Instantiate and prepare the wasm for parsing
    const ready = await parser.prepareWasm(new Uint8Array(await wasmResponse.arrayBuffer()));
    if (ready) {
        return parser;
    }
}
export async function createInterpolator(config, saxWasmPath = './sax-wasm.wasm') {
    const parser = await getParser(saxWasmPath);
    return new SVGPathInterpolator({ ...config, parser });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsdUNBQWlCO0FBQ25ELE9BQU8sRUFBeUIsbUJBQW1CLEVBQUUsaUNBQThCO0FBRW5GLEtBQUssVUFBVSxTQUFTLENBQUMsV0FBVztJQUNsQyxNQUFNLFlBQVksR0FBRyxNQUFNLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBQztRQUNuQixNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixXQUFXLEVBQUUsQ0FBQyxDQUFDO0tBQzdEO0lBQ0QsTUFBTSxNQUFNLEdBQUcsSUFBSSxTQUFTLENBQUMsWUFBWSxDQUFDLE9BQU8sR0FBRyxZQUFZLENBQUMsUUFBUSxFQUFFLEVBQUUsYUFBYSxFQUFFLEVBQUUsR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRXpHLCtDQUErQztJQUMvQyxNQUFNLEtBQUssR0FBRyxNQUFNLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxVQUFVLENBQUMsTUFBTSxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3pGLElBQUksS0FBSyxFQUFFO1FBQ1QsT0FBTyxNQUFNLENBQUM7S0FDZjtBQUNILENBQUM7QUFFRCxNQUFNLENBQUMsS0FBSyxVQUFVLGtCQUFrQixDQUFDLE1BQTZCLEVBQUUsV0FBVyxHQUFHLGlCQUFpQjtJQUNyRyxNQUFNLE1BQU0sR0FBRyxNQUFNLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1QyxPQUFPLElBQUksbUJBQW1CLENBQUMsRUFBRSxHQUFHLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBQ3hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTYXhFdmVudFR5cGUsIFNBWFBhcnNlciB9IGZyb20gJ3NheC13YXNtJztcbmltcG9ydCB7IFNWR0ludGVycG9sYXRvckNvbmZpZywgU1ZHUGF0aEludGVycG9sYXRvciB9IGZyb20gJy4vU1ZHUGF0aEludGVycG9sYXRvcic7XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFBhcnNlcihzYXhXYXNtUGF0aCkge1xuICBjb25zdCB3YXNtUmVzcG9uc2UgPSBhd2FpdCBmZXRjaChzYXhXYXNtUGF0aCk7XG4gIGlmICghd2FzbVJlc3BvbnNlLm9rKXtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBsb2FkIHRoZSBwYXJzZXIgYXQgJHtzYXhXYXNtUGF0aH1gKTtcbiAgfVxuICBjb25zdCBwYXJzZXIgPSBuZXcgU0FYUGFyc2VyKFNheEV2ZW50VHlwZS5PcGVuVGFnIHwgU2F4RXZlbnRUeXBlLkNsb3NlVGFnLCB7IGhpZ2hXYXRlck1hcms6IDY0ICogMTAyNCB9KTtcblxuICAvLyBJbnN0YW50aWF0ZSBhbmQgcHJlcGFyZSB0aGUgd2FzbSBmb3IgcGFyc2luZ1xuICBjb25zdCByZWFkeSA9IGF3YWl0IHBhcnNlci5wcmVwYXJlV2FzbShuZXcgVWludDhBcnJheShhd2FpdCB3YXNtUmVzcG9uc2UuYXJyYXlCdWZmZXIoKSkpO1xuICBpZiAocmVhZHkpIHtcbiAgICByZXR1cm4gcGFyc2VyO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVJbnRlcnBvbGF0b3IoY29uZmlnOiBTVkdJbnRlcnBvbGF0b3JDb25maWcsIHNheFdhc21QYXRoID0gJy4vc2F4LXdhc20ud2FzbScpIHtcbiAgY29uc3QgcGFyc2VyID0gYXdhaXQgZ2V0UGFyc2VyKHNheFdhc21QYXRoKTtcbiAgcmV0dXJuIG5ldyBTVkdQYXRoSW50ZXJwb2xhdG9yKHsgLi4uY29uZmlnLCBwYXJzZXIgfSk7XG59XG4iXX0=